library(tidyverse)
library(dplyr)
library(leaflet)
library(leaflet.extras)
library(htmlwidgets)
library(gstat)
library(sp)
#library(maptools)
#MAC AW
#setwd("/Users/andywilson1/Documents/GitHub/Olivia-DIA")
#PC AW
setwd("C:/Users/wilso/Documents/GitHub/Olivia-DIA")
## Centralizing in Washington state (square boundaries)
## Note: it is possible to create grids with irregular boundaries, but this is close enough for Wash. state
lat_min = 45.54354
lat_max = 49.00249
lon_max = -116.91599
lon_min = -124.73317
## Import positivity data
prev <- read.csv(file = "External data/ZIP3_XY_HPV_SCREEN_2019_SLIM.csv", na.strings = c("", "NA"))
## Restrict to Washington state
Wash_prev <- prev %>%
filter(Longitude_avg >=  lon_min) %>%
filter(Longitude_avg <=  lon_max) %>%
filter(Latitude_avg  >=  lat_min) %>%
filter(Latitude_avg  <=  lat_max) %>%
filter(zip3 != "971")
summary(Wash_prev)
#get the list of states from us_state_polygons.json
states <- geojsonio::geojson_read("us_state_polygons.json", what = "sp")
counties<- geojsonio::geojson_read("us_county_polygons.json", what = "sp")
S <- leaflet(states, options = leafletOptions(dragging=TRUE,
minZoom=4,
maxZoom=11))%>%
setView(-98.35, 39.5, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
S
View(prev)
head(prev)
SS <- S %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = myWashIRS$n_screened/10,
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity),
clusterOptions = markerClusterOptions())
pal  <- colorNumeric(palette = "RdYlBu", domain =c(0:45))
pal2 <- colorNumeric(palette = "RdYlBu", domain =c(0:140), reverse = TRUE)
pal3 <- colorNumeric(palette = "RdYlBu", domain =c(0:15), reverse = TRUE)
pal4 <- colorNumeric(palette = "Blues", domain =c(1:50))
SS <- S %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = myWashIRS$n_screened/10,
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity),
clusterOptions = markerClusterOptions())
S <- leaflet(states, options = leafletOptions(dragging=TRUE,
minZoom=4,
maxZoom=11))%>%
setView(-98.35, 39.5, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
SS <- S %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = myWashIRS$n_screened/10,
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity),
clusterOptions = markerClusterOptions())
SS <- S %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = prev$n_screened/10,
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity),
clusterOptions = markerClusterOptions())
SS
SS <- S %>% addPolygons(data = states, weight=1) %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = prev$n_screened/10,
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity),
clusterOptions = markerClusterOptions())
SS
SS <- S %>% addPolygons(data = states, weight=1) %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = log(prev$n_screened),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity),
clusterOptions = markerClusterOptions())
SS
SS <- S %>% addPolygons(data = states, weight=1) %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = log(prev$n_screened),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity),
fillOpacity = 0.2)
SS
SS <- S %>% addPolygons(data = states, weight=.1) %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = log(prev$n_screened),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity)
)
SS
SS <- S %>% addPolygons(data = states, weight=.5) %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = log(prev$n_screened),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(prev$positivity)
)
SS
summary(prev)
qpal <- colorQuantile("Blues", prev$positivity, n = 5)
S <- leaflet(states, options = leafletOptions(dragging=TRUE,
minZoom=4,
maxZoom=11))%>%
setView(-98.35, 39.5, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
SS <- S %>% addPolygons(data = states, weight=.5) %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = log(prev$n_screened),
stroke = TRUE, fillOpacity = 0.8,
color = qpal(prev$positivity)
)
SS
qpal <- colorQuantile("Reds", prev$positivity, n = 5)
S <- leaflet(states, options = leafletOptions(dragging=TRUE,
minZoom=4,
maxZoom=11))%>%
setView(-98.35, 39.5, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
SS <- S %>% addPolygons(data = states, weight=.5) %>%
addCircleMarkers(lng = prev$Longitude_avg,
lat = prev$Latitude_avg,
label = prev$positivity,
popup = paste("<b>","Positivity =", prev$positivity,"</b>"),
radius = log(prev$n_screened),
stroke = TRUE, fillOpacity = 0.8,
color = qpal(prev$positivity)
)
SS
SS %>% addResetMapButton() %>%
addLegend(title = "Positivity rate",
position = "bottomleft",
pal=qpal,
values = prev$positivity)
SS %>% addResetMapButton() %>%
addLegend(title = "Positivity quantile (relative standing)",
position = "bottomleft",
pal=qpal,
values = prev$positivity)
saveWidget(SS, file = "C:/Users/wilso/Documents/GitHub/Olivia-DIA/Output/Prototype US positivity quantiles map v1.1.html")
