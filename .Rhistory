group = "County Uninsured") %>%
addCircleMarkers(lng = myWashIRS$longitude,
lat = myWashIRS$latitude,
label = myWashIRS$PlaceName,
popup = paste("<b>", myWashIRS$PlaceName,"</b>",
"<br/>",
" AVG ADJUSTED GROSS INCOME (IN THOUSANDS OF DOLLARS)     = $", round(myWashIRS$AdjInc,2),
"<br/>",
"zip = ", myWashIRS$zip),
radius = myWashIRS$AdjInc,
stroke = TRUE, fillOpacity = 0.5,
color = pal2(myWashIRS$AdjInc),
group = "IRS tax data by zip",
clusterOptions = markerClusterOptions()) %>%
addCircleMarkers(lng = Wash_prev$Longitude_avg,
lat = Wash_prev$Latitude_avg,
label = Wash_prev$zip3,
popup = paste("<b>", Wash_prev$zip3,"</b>",
"<br/>",
" Positivity rate: ", round(Wash_prev$positivity,2), "%",
"<br/>",
"n screened = ", Wash_prev$n_screened,
"<br/>",
"n positive = ", Wash_prev$n_positive
),
radius = log(Wash_prev$n_positive),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(Wash_prev$positivity),
group = "Positivity by 3-digit zip") %>%
addLayersControl(overlayGroups = c("County HPV vaccination", "IRS tax data by zip", "County Uninsured", "Positivity by 3-digit zip"))
MMM <- MM %>% addResetMapButton() %>%
addLegend(title = "Vaccination rates",
position = "bottomleft",
pal=pal,
values = c(0:45)) %>%
addLegend(title = "Avg annual income",
position = "bottomright",
pal=pal2,
values = c(0:150))%>%
addLegend(title = "Percent uninsured",
position = "topleft",
pal=pal3,
values = c(0:15)) %>%
addLegend(title = "Positivity rate",
position = "topright",
pal=pal4,
values = c(0:50))
MMM
#MAC AW
#saveWidget(MMM, file = "/Users/andywilson1/Documents/GitHub/Olivia-DIA/Output/Prototype Washington map v0.1.html")
#PC AW
saveWidget(MMM, file = "C:/Users/wilso/Documents/GitHub/Olivia-DIA/Output/Prototype Washington map v1.0.html")
MM <- m %>% addPolygons(data = mydf, weight=1, fillOpacity = 0.45,
color = pal(mydf$All),
label = mydf$NAME,
popup = paste0("Percent HPV vaccine UtD: ",
mydf$All, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "County HPV vaccination") %>%
addPolygons(data = mydf2, weight=1, fillOpacity = 0.45,
color = pal3(Percent_uninsured$PCTUI_PTnum),
label = mydf2$NAME,
popup = paste0("Percent Uninsured: ",
Percent_uninsured$PCTUI_PTnum, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "County Uninsured") %>%
addCircleMarkers(lng = myWashIRS$longitude,
lat = myWashIRS$latitude,
label = myWashIRS$PlaceName,
popup = paste("<b>", myWashIRS$PlaceName,"</b>",
"<br/>",
" AVG ADJUSTED GROSS INCOME (IN THOUSANDS OF DOLLARS)     = $", round(myWashIRS$AdjInc,2),
"<br/>",
"zip = ", myWashIRS$zip),
radius = sqrt(myWashIRS$AdjInc),
stroke = TRUE, fillOpacity = 0.5,
color = pal2(myWashIRS$AdjInc),
group = "IRS tax data by zip",
clusterOptions = markerClusterOptions()) %>%
addCircleMarkers(lng = Wash_prev$Longitude_avg,
lat = Wash_prev$Latitude_avg,
label = Wash_prev$zip3,
popup = paste("<b>", Wash_prev$zip3,"</b>",
"<br/>",
" Positivity rate: ", round(Wash_prev$positivity,2), "%",
"<br/>",
"n screened = ", Wash_prev$n_screened,
"<br/>",
"n positive = ", Wash_prev$n_positive
),
radius = log(Wash_prev$n_positive),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(Wash_prev$positivity),
group = "Positivity by 3-digit zip") %>%
addLayersControl(overlayGroups = c("County HPV vaccination", "IRS tax data by zip", "County Uninsured", "Positivity by 3-digit zip"))
MMM <- MM %>% addResetMapButton() %>%
addLegend(title = "Vaccination rates",
position = "bottomleft",
pal=pal,
values = c(0:45)) %>%
addLegend(title = "Avg annual income",
position = "bottomright",
pal=pal2,
values = c(0:150))%>%
addLegend(title = "Percent uninsured",
position = "topleft",
pal=pal3,
values = c(0:15)) %>%
addLegend(title = "Positivity rate",
position = "topright",
pal=pal4,
values = c(0:50))
MMM
MM <- m %>% addPolygons(data = mydf, weight=1, fillOpacity = 0.45,
color = pal(mydf$All),
label = mydf$NAME,
popup = paste0("Percent HPV vaccine UtD: ",
mydf$All, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "County HPV vaccination") %>%
addPolygons(data = mydf2, weight=1, fillOpacity = 0.45,
color = pal3(Percent_uninsured$PCTUI_PTnum),
label = mydf2$NAME,
popup = paste0("Percent Uninsured: ",
Percent_uninsured$PCTUI_PTnum, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "County Uninsured") %>%
addCircleMarkers(lng = myWashIRS$longitude,
lat = myWashIRS$latitude,
label = myWashIRS$PlaceName,
popup = paste("<b>", myWashIRS$PlaceName,"</b>",
"<br/>",
" AVG ADJUSTED GROSS INCOME (IN THOUSANDS OF DOLLARS)     = $", round(myWashIRS$AdjInc,2),
"<br/>",
"zip = ", myWashIRS$zip),
radius = sqrt(myWashIRS$AdjInc),
stroke = TRUE, fillOpacity = 0.5,
color = pal2(myWashIRS$AdjInc),
group = "IRS tax data by zip",
clusterOptions = markerClusterOptions()) %>%
addCircleMarkers(lng = Wash_prev$Longitude_avg,
lat = Wash_prev$Latitude_avg,
label = Wash_prev$zip3,
popup = paste("<b>", Wash_prev$zip3,"</b>",
"<br/>",
" Positivity rate: ", round(Wash_prev$positivity,2), "%",
"<br/>",
"n screened = ", Wash_prev$n_screened,
"<br/>",
"n positive = ", Wash_prev$n_positive
),
radius = log(Wash_prev$n_positive),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(Wash_prev$positivity),
group = "Positivity by 3-digit zip") %>%
addLayersControl(overlayGroups = c("County HPV vaccination", "IRS tax data by zip", "County Uninsured", "Positivity by 3-digit zip"))
MMM <- MM %>% addResetMapButton() %>%
addLegend(title = "Vaccination rates",
position = "bottomleft",
pal=pal,
values = c(0:45)) %>%
addLegend(title = "Avg annual income (in $1,000s)",
position = "bottomright",
pal=pal2,
values = c(0:150))%>%
addLegend(title = "Percent uninsured",
position = "topleft",
pal=pal3,
values = c(0:15)) %>%
addLegend(title = "Positivity rate",
position = "topright",
pal=pal4,
values = c(0:50))
MMM
#MAC AW
#saveWidget(MMM, file = "/Users/andywilson1/Documents/GitHub/Olivia-DIA/Output/Prototype Washington map v0.1.html")
#PC AW
saveWidget(MMM, file = "C:/Users/wilso/Documents/GitHub/Olivia-DIA/Output/Prototype Washington map v1.0.html")
MM <- m %>% addPolygons(data = mydf, weight=1, fillOpacity = 0.45,
color = pal(mydf$All),
label = mydf$NAME,
popup = paste0("Percent HPV vaccine UtD: ",
mydf$All, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "County HPV vaccination") %>%
addPolygons(data = mydf2, weight=1, fillOpacity = 0.45,
color = pal3(Percent_uninsured$PCTUI_PTnum),
label = mydf2$NAME,
popup = paste0("Percent Uninsured: ",
Percent_uninsured$PCTUI_PTnum, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "County Uninsured") %>%
addCircleMarkers(lng = myWashIRS$longitude,
lat = myWashIRS$latitude,
label = myWashIRS$PlaceName,
popup = paste("<b>", myWashIRS$PlaceName,"</b>",
"<br/>",
" AVG ADJUSTED GROSS INCOME (IN THOUSANDS OF DOLLARS)     = $", round(myWashIRS$AdjInc,2),
"<br/>",
"zip = ", myWashIRS$zip),
radius = myWashIRS$AdjInc/10,
stroke = TRUE, fillOpacity = 0.5,
color = pal2(myWashIRS$AdjInc),
group = "IRS tax data by zip",
clusterOptions = markerClusterOptions()) %>%
addCircleMarkers(lng = Wash_prev$Longitude_avg,
lat = Wash_prev$Latitude_avg,
label = Wash_prev$zip3,
popup = paste("<b>", Wash_prev$zip3,"</b>",
"<br/>",
" Positivity rate: ", round(Wash_prev$positivity,2), "%",
"<br/>",
"n screened = ", Wash_prev$n_screened,
"<br/>",
"n positive = ", Wash_prev$n_positive
),
radius = log(Wash_prev$n_positive),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(Wash_prev$positivity),
group = "Positivity by 3-digit zip") %>%
addLayersControl(overlayGroups = c("County HPV vaccination", "IRS tax data by zip", "County Uninsured", "Positivity by 3-digit zip"))
MMM <- MM %>% addResetMapButton() %>%
addLegend(title = "Vaccination rates",
position = "bottomleft",
pal=pal,
values = c(0:45)) %>%
addLegend(title = "Avg annual income (in $1,000s)",
position = "bottomright",
pal=pal2,
values = c(0:150))%>%
addLegend(title = "Percent uninsured",
position = "topleft",
pal=pal3,
values = c(0:15)) %>%
addLegend(title = "Positivity rate",
position = "topright",
pal=pal4,
values = c(0:50))
MMM
MM <- m %>% addPolygons(data = mydf, weight=1, fillOpacity = 0.45,
color = pal(mydf$All),
label = mydf$NAME,
popup = paste0("Percent HPV vaccine UtD: ",
mydf$All, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "County HPV vaccination") %>%
addPolygons(data = mydf2, weight=1, fillOpacity = 0.45,
color = pal3(Percent_uninsured$PCTUI_PTnum),
label = mydf2$NAME,
popup = paste0("Percent Uninsured: ",
Percent_uninsured$PCTUI_PTnum, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "County Uninsured") %>%
addCircleMarkers(lng = myWashIRS$longitude,
lat = myWashIRS$latitude,
label = myWashIRS$PlaceName,
popup = paste("<b>", myWashIRS$PlaceName,"</b>",
"<br/>",
" AVG ADJUSTED GROSS INCOME (IN THOUSANDS OF DOLLARS)     = $", round(myWashIRS$AdjInc,2),
"<br/>",
"zip = ", myWashIRS$zip),
radius = myWashIRS$AdjInc/10,
stroke = TRUE, fillOpacity = 0.8,
color = pal2(myWashIRS$AdjInc),
group = "IRS tax data by zip",
clusterOptions = markerClusterOptions()) %>%
addCircleMarkers(lng = Wash_prev$Longitude_avg,
lat = Wash_prev$Latitude_avg,
label = Wash_prev$zip3,
popup = paste("<b>", Wash_prev$zip3,"</b>",
"<br/>",
" Positivity rate: ", round(Wash_prev$positivity,2), "%",
"<br/>",
"n screened = ", Wash_prev$n_screened,
"<br/>",
"n positive = ", Wash_prev$n_positive
),
radius = log(Wash_prev$n_positive),
stroke = TRUE, fillOpacity = 0.8,
color = pal4(Wash_prev$positivity),
group = "Positivity by 3-digit zip") %>%
addLayersControl(overlayGroups = c("County HPV vaccination", "IRS tax data by zip", "County Uninsured", "Positivity by 3-digit zip"))
MMM <- MM %>% addResetMapButton() %>%
addLegend(title = "Vaccination rates",
position = "bottomleft",
pal=pal,
values = c(0:45)) %>%
addLegend(title = "Avg annual income (in $1,000s)",
position = "bottomright",
pal=pal2,
values = c(0:150))%>%
addLegend(title = "Percent uninsured",
position = "topleft",
pal=pal3,
values = c(0:15)) %>%
addLegend(title = "Positivity rate",
position = "topright",
pal=pal4,
values = c(0:50))
MMM
#MAC AW
#saveWidget(MMM, file = "/Users/andywilson1/Documents/GitHub/Olivia-DIA/Output/Prototype Washington map v0.1.html")
#PC AW
saveWidget(MMM, file = "C:/Users/wilso/Documents/GitHub/Olivia-DIA/Output/Prototype Washington map v1.0.html")
saveWidget(MMM, file = "C:/Users/wilso/Documents/GitHub/Olivia-DIA/Output/Prototype Washington map v1.1.html")
WV2018
plot(mydf, col="lightblue", lwd=2, main = "Washington State (US)
grid for Kriging")
abline(h=c(lat_max, lat_min), lty=2, lwd=3, col="blue")
abline(v=c(lon_max, lon_min), lty=2, lwd=3, col="blue")
bbox(mydf)
lat_min = 45.54354
lat_max = 49.00249
lon_max = -116.91599
lon_min = -124.73317
plot(mydf, col="lightblue", lwd=2, main = "Washington State (US)
grid for Kriging")
abline(h=c(lat_max, lat_min), lty=2, lwd=3, col="blue")
abline(v=c(lon_max, lon_min), lty=2, lwd=3, col="blue")
pdf(file = "Output/Washington bounding box for Kriging.pdf")
plot(mydf, col="lightblue", lwd=2, main = "Washington State (US)
grid for Kriging")
abline(h=c(lat_max, lat_min), lty=2, lwd=3, col="blue")
abline(v=c(lon_max, lon_min), lty=2, lwd=3, col="blue")
dev.off()
mydf %>% as.data.frame %>% glimpse
mydf@data %>% glimpse
mydf2 %>% glimpse
pct.vgm <- variogram(PCTUI_PTnum ~1, mydf2)
pct.fit <- fit.variogram(pct.vgm, model=vgm(1, "Sph"))
plot(pct.vgm, pct.fit)
plot(pct.vgm, pct.fit, axes=F)
pdf(file = "Output/Variogram vax rates.pdf", width=10)
plot(pct.vgm, pct.fit)
dev.off()
grd <- makegrid(mydf2, n=100)
colnames(grd) <- c('x', 'y')
grd_pts <- SpatialPoints(coords = grd,
proj4string = CRS(proj4string(mydf2)))
grd_pts_in <- grd_pts[mydf2, ]
gdf <- as.data.frame(grd_pts_in)
ggplot(gdf) +
geom_point(x=x, y=y)
gdf
ggplot(gdf)
geom_point(x=x, y=y)
ggplot(gdf) +
geom_point(aes(x=x, y=y))
grd <- makegrid(mydf2, n=1000)
colnames(grd) <- c('x', 'y')
grd_pts <- SpatialPoints(coords = grd,
proj4string = CRS(proj4string(mydf2)))
grd_pts_in <- grd_pts[mydf2, ]
gdf <- as.data.frame(grd_pts_in)
ggplot(gdf) +
geom_point(aes(x=x, y=y))
grd <- makegrid(mydf2, n=10000)
colnames(grd) <- c('x', 'y')
grd_pts <- SpatialPoints(coords = grd,
proj4string = CRS(proj4string(mydf2)))
grd_pts_in <- grd_pts[mydf2, ]
gdf <- as.data.frame(grd_pts_in)
ggplot(gdf) +
geom_point(aes(x=x, y=y))
library(ggthemes)
ggplot(gdf) +
geom_point(aes(x=x, y=y))+
theme_few()
ggplot(gdf) +
geom_point(aes(x=x, y=y), col="lightblue")+
theme_few()
ggplot(gdf) +
geom_point(aes(x=x, y=y), col="blue")+
theme_few()
ggplot(gdf) +
geom_point(aes(x=x, y=y), col="darkgrey")+
theme_few()
pdf(file = "Output/Washington grid for Kriging.pdf")
ggplot(gdf) +
geom_point(aes(x=x, y=y))+
theme_few()
dev.off()
pdf(file = "Output/Washington grid for Kriging.pdf", width=10)
ggplot(gdf) +
geom_point(aes(x=x, y=y))+
theme_few()
dev.off()
coordinates(mydf2) <- ~ x + y
coordinates(mydf2)
coordinates(gdf)
grd <- makegrid(mydf2, n=10000)
#colnames(grd) <- c('x', 'y')
grd_pts <- SpatialPoints(coords = grd,
proj4string = CRS(proj4string(mydf2)))
grd_pts_in <- grd_pts[mydf2, ]
gdf <- as.data.frame(grd_pts_in)
coordinates(mydf2)
coordinates(gdf)
pct.kriged <-krige(PCTUI_PTnum ~1, mydf2, gdf, pct.fit )
pct.kriged <-krige(PCTUI_PTnum ~1, mydf2, grd_pts_in, pct.fit )
pct.kriged
plot(pct.kriged)
pct.kriged.data <- as.data.frame(pct.kriged)
head(pct.kriged.data)
pct.kriged.data %>%
ggplot(aes(x=x1, y=y1)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="blue", high ="red") +
theme_few()
pct.kriged.data %>%
ggplot(aes(x1=x, y1=y)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="blue", high ="red") +
theme_few()
ggplot(aes(x1=x1, y1=y1)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="blue", high ="red") +
theme_few()
pct.kriged.data %>%
ggplot(aes(x1=x1, y1=y1)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="blue", high ="red") +
theme_few()
head(pct.kriged.data)
View(pct.kriged.data)
pct.kriged.data %>%
ggplot(aes(x=x1, y=x2)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="blue", high ="red") +
theme_few()
pct.kriged.data %>%
ggplot(aes(x=x1, y=x2)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="red", high ="blue") +
theme_few()
grd <- makegrid(mydf2, n=100000)
#colnames(grd) <- c('x', 'y')
grd_pts <- SpatialPoints(coords = grd,
proj4string = CRS(proj4string(mydf2)))
grd_pts_in <- grd_pts[mydf2, ]
gdf <- as.data.frame(grd_pts_in)
ggplot(gdf) +
geom_point(aes(x=x, y=y))+
theme_few()
grd <- makegrid(mydf2, n=100000)
colnames(grd) <- c('x', 'y')
grd_pts <- SpatialPoints(coords = grd,
proj4string = CRS(proj4string(mydf2)))
grd_pts_in <- grd_pts[mydf2, ]
gdf <- as.data.frame(grd_pts_in)
ggplot(gdf) +
geom_point(aes(x=x, y=y))+
theme_few()
pct.kriged <-krige(PCTUI_PTnum ~1, mydf2, grd_pts_in, pct.fit )
pct.kriged.data <- as.data.frame(pct.kriged)
head(pct.kriged.data)
pct.kriged.data %>%
ggplot(aes(x=x1, y=x2)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="red", high ="blue") +
theme_few()
head(pct.kriged.data)
pct.kriged.data %>%
ggplot(aes(x=x, y=x)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="red", high ="blue") +
theme_few()
grd <- makegrid(mydf2, n=100000)
#colnames(grd) <- c('x', 'y')
grd_pts <- SpatialPoints(coords = grd,
proj4string = CRS(proj4string(mydf2)))
grd_pts_in <- grd_pts[mydf2, ]
gdf <- as.data.frame(grd_pts_in)
ggplot(aes(x=x, y=y)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="red", high ="blue") +
theme_few()
pct.kriged.data %>%
ggplot(aes(x=x, y=y)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient(low="red", high ="blue") +
theme_few()
pct.kriged.data %>%
ggplot(aes(x=x, y=y)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient("Predicted", low="red", high ="blue") +
theme_few()
pct.kriged.data %>%
ggplot(aes(x=x, y=y)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient("Predicted", low="red", high ="blue") +
theme_void()
pdf(file = "Output/Predicted vaccination rate.pdf", width=10)
pct.kriged.data %>%
ggplot(aes(x=x, y=y)) +
geom_tile(aes(fill=var1.pred)) + coord_equal() +
scale_fill_gradient("Predicted", low="red", high ="blue") +
theme_void()
dev.off()
pct.kriged.data %>%
ggplot(aes(x=x, y=y)) +
geom_tile(aes(fill=var1.var)) + coord_equal() +
scale_fill_gradient("Variance", low="blue", high ="red") +
theme_void()
pdf(file = "Output/Variance vaccination rate.pdf", width=10)
pct.kriged.data %>%
ggplot(aes(x=x, y=y)) +
geom_tile(aes(fill=var1.var)) + coord_equal() +
scale_fill_gradient("Variance", low="blue", high ="red") +
theme_void()
dev.off()
write.csv(pct.kriged.data, "Kriged data.csv")
