library(tidyverse)
library(dplyr)
library(leaflet)
library(leaflet.extras)
library(htmlwidgets)
library(gstat)
library(sp)
#library(maptools)
#MAC AW
setwd("/Users/andywilson1/Documents/GitHub/Olivia-DIA")
#PC AW
#setwd("C:/Users/wilso/Documents/GitHub/Olivia-DIA")
## Centralizing in Washington state (square boundaries)
## Note: it is possible to create grids with irregular boundaries, but this is close enough for Wash. state
lat_min = 45.54354
lat_max = 49.00249
lon_max = -116.91599
lon_min = -124.73317
prev <- read.csv(file = "External data/ZIP3_XY_HPV_SCREEN_2019_SLIM.csv", na.strings = c("", "NA"))
## Restrict to Washington state
Wash_prev <- prev %>%
filter(Longitude_avg >=  lon_min) %>%
filter(Longitude_avg <=  lon_max) %>%
filter(Latitude_avg  >=  lat_min) %>%
filter(Latitude_avg  <=  lat_max) %>%
filter(zip3 != "971")
summary(Wash_prev)
#get the list of states from us_state_polygons.json
states <- geojsonio::geojson_read("us_state_polygons.json", what = "sp")
counties<- geojsonio::geojson_read("us_county_polygons.json", what = "sp")
# Maps of the US (State level)
US2017<- read.csv(file = "HPV Data/HPV vaccine/HPV_vax_by_state.csv", na.strings = c("", "NA"), fileEncoding="UTF-8-BOM") %>%
drop_na(HPV)
mydfz<- sp::merge(states, US2017 , by="NAME", all=T)
# Maps of Washington state (County level)
Washington <- subset(counties, STATE == "53")
## HPV vaccination coverage in 2018
WV2018<- read.csv(file = "HPV Data/HPV vaccine/Washington_2018_analysis.csv", na.strings = c("", "NA"), fileEncoding="UTF-8-BOM")
WV2018 <- WV2018 %>%
rename(NAME = Geography)
mydf<- sp::merge(Washington, WV2018 , by="NAME", all=T)
pdf(file = "Output/Washington bounding box for Kriging.pdf")
plot(mydf, col="lightblue", lwd=2, main = "Washington State (US)
grid for Kriging")
abline(h=c(lat_max, lat_min), lty=2, lwd=3, col="blue")
abline(v=c(lon_max, lon_min), lty=2, lwd=3, col="blue")
dev.off()
Percent_uninsured_from_census<- read.csv(file = "Percent_uninsured_from_census.csv", na.strings = c("", "NA"))
head(Percent_uninsured_from_census)
Percent_uninsured <- Percent_uninsured_from_census %>%
filter(state=="53")
Percent_uninsured$NAME <- gsub(" County, WA" , "", Percent_uninsured$NAME)
Percent_uninsured$PCTUI_PTnum <- as.numeric(as.character(Percent_uninsured$PCTUI_PT))
mydf2 <- sp::merge(Washington, Percent_uninsured , by ="NAME",  all=T)
## Income data 2017
library(readxl)
ZipCodeSourceFile = "http://download.geonames.org/export/zip/US.zip"
temp <- tempfile()
download.file(ZipCodeSourceFile , temp)
ZipCodes <- read.table(unz(temp, "US.txt"), sep="\t")
unlink(temp)
names(ZipCodes) = c("CountryCode", "zip", "PlaceName",
"AdminName1", "AdminCode1", "AdminName2", "AdminCode2",
"AdminName3", "AdminCode3", "latitude", "longitude", "accuracy")
head(ZipCodes)
ZipCodes <- ZipCodes %>%
filter(AdminName1=="Washington")
WashIRS <- read_excel("IRS Income Data/DIA Submission Income Data 2017.xlsx")
WashIRS <- WashIRS %>%
filter(STATE=="WA") %>%
rename(zip = 'ZIP CODE')
table(WashIRS$STATE)
head(ZipCodes)
head(WashIRS)
myWashIRS <- merge(ZipCodes, WashIRS, by="zip", all=T)
#Rename Adjusted income:
myWashIRS$AdjInc <- myWashIRS$`AVG ADJUSTED GROSS INCOME (IN THOUSANDS OF DOLLARS)`
myWashIRS <- myWashIRS %>%
drop_na(AdjInc)
summary(myWashIRS$AdjInc)
z <- leaflet(mydfz, options = leafletOptions(dragging=TRUE,
minZoom=5,
maxZoom=11))%>%
setView(-98.35, 39.5, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
#Palettes:
palz1  <- colorNumeric(palette = "Blues", domain =c(45:95))
palz2  <- colorNumeric(palette = "YlOrRd", domain =c(25:80), reverse = TRUE)
summary(mydfz@data)
ZZ <- z %>% addPolygons(data = mydfz, weight=1, fillOpacity = (2*(mydfz$HPV-50)/100), stroke = FALSE,
color = "#3182bd",
label = mydfz$NAME,
popup = paste0("Percent HPV vaccine Initiated: ",
mydfz$HPV2, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "HPV 1+") %>%
addPolygons(data = mydfz, weight=1, fillOpacity = 0.25,
color = palz2(mydfz$HPV.UTD),
label = mydfz$NAME,
popup = paste0("Percent HPV vaccine UtD ",
mydfz$HPV.UTD2 , "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "HPV Vaccine UtD") %>%
addLayersControl(overlayGroups = c("HPV 1+", "HPV Vaccine UtD"))
ZZZ <- ZZ %>% addResetMapButton() %>%
addLegend(title = "Vaccination Initiated",
position = "bottomleft",
pal=palz1,
values = c(45:95)) %>%
addLegend(title = "Vaccination UtD",
position = "bottomright",
pal=palz2,
values = c(25:80))
ZZZ
saveWidget(ZZZ, file = "/Users/andywilson1/Documents/GitHub/Olivia-DIA/Output/NIS Teen Vax map.html")
z <- leaflet(mydfz, options = leafletOptions(dragging=TRUE,
minZoom=4,
maxZoom=11))%>%
setView(-98.35, 39.5, 5) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
#Palettes:
palz1  <- colorNumeric(palette = "Blues", domain =c(45:95))
palz2  <- colorNumeric(palette = "YlOrRd", domain =c(25:80), reverse = TRUE)
summary(mydfz@data)
ZZ <- z %>% addPolygons(data = mydfz, weight=1, fillOpacity = (2*(mydfz$HPV-50)/100), stroke = FALSE,
color = "#3182bd",
label = mydfz$NAME,
popup = paste0("Percent HPV vaccine Initiated: ",
mydfz$HPV2, "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "HPV 1+") %>%
addPolygons(data = mydfz, weight=1, fillOpacity = 0.25,
color = palz2(mydfz$HPV.UTD),
label = mydfz$NAME,
popup = paste0("Percent HPV vaccine UtD ",
mydfz$HPV.UTD2 , "%"),
labelOptions = labelOptions(textOnly = FALSE),
group = "HPV Vaccine UtD") %>%
addLayersControl(overlayGroups = c("HPV 1+", "HPV Vaccine UtD"))
ZZZ <- ZZ %>% addResetMapButton() %>%
addLegend(title = "Vaccination Initiated",
position = "bottomleft",
pal=palz1,
values = c(45:95)) %>%
addLegend(title = "Vaccination UtD",
position = "bottomright",
pal=palz2,
values = c(25:80))
ZZZ
saveWidget(ZZZ, file = "/Users/andywilson1/Documents/GitHub/Olivia-DIA/Output/NIS Teen Vax map.html")
